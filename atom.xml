<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>罗豪</title>
  
  
  <link href="http://ohao1017.github.io/atom.xml" rel="self"/>
  
  <link href="http://ohao1017.github.io/"/>
  <updated>2020-08-21T02:35:51.150Z</updated>
  <id>http://ohao1017.github.io/</id>
  
  <author>
    <name>罗豪</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB常用命令</title>
    <link href="http://ohao1017.github.io/2020/08/21/MongoDB%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%A1/"/>
    <id>http://ohao1017.github.io/2020/08/21/MongoDB%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%A1/</id>
    <published>2020-08-21T02:31:34.265Z</published>
    <updated>2020-08-21T02:35:51.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MongoDB学习"><a href="#MongoDB学习" class="headerlink" title="MongoDB学习"></a>MongoDB学习</h1><h4 id="Mongo常用命令"><a href="#Mongo常用命令" class="headerlink" title="Mongo常用命令"></a>Mongo常用命令</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> 库名    <span class="comment">----切换数据库 如果没有就创建数据库并且进入</span></span><br><span class="line"><span class="keyword">show</span> dbs      <span class="comment">---查看有权限的数据库 </span></span><br><span class="line">db      <span class="comment">--查看当前数据库</span></span><br><span class="line">db.dropdabase()        <span class="comment">--删除数据库</span></span><br><span class="line"></span><br><span class="line">db.createCollection(<span class="keyword">name</span>)    <span class="comment">--创建集合 显示创建</span></span><br><span class="line"><span class="keyword">show</span> collections    <span class="comment">--查看所有集合</span></span><br><span class="line">db.name.drop();        <span class="comment">--删除集合 name=名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">----文档的crud</span></span><br><span class="line">db.name.insert()    <span class="comment">--单条数据插入</span></span><br><span class="line">db.name.insertMany() <span class="comment">--插入多条数据</span></span><br><span class="line">db.name.find()        <span class="comment">--查询所有数据 +pretty()bson格式显示</span></span><br><span class="line">db.name.find(&#123;字段：值&#125;)    --根据条件查询所有字段</span><br><span class="line">db.name.find(&#123;字段：值&#125;，&#123;字段1，字段2&#125;)    --根据条件查询所需字段</span><br><span class="line">db.name.findOne()    <span class="comment">--查询单条数据</span></span><br><span class="line">db.name.update(&#123;条件：条件值&#125;，&#123;$set:&#123;字段：值&#125;&#125;)    --修改单条数据</span><br><span class="line">db.name.update(&#123;条件：条件值&#125;，&#123;$set:&#123;字段：值&#125;&#125;,&#123;multi:true&#125;)    --修改多条数据</span><br><span class="line">db.name.remove(&#123;条件：条件值&#125;)    --删除数据</span><br><span class="line">db.name.count(&#123;查询条件&#125;)    --统计</span><br><span class="line">db.name.find().limit(参数);     <span class="comment">--分页查询</span></span><br><span class="line">db.name.find().limit(参数).skip(参数)  <span class="comment">--skip跳过前几条</span></span><br><span class="line">db.name.find().sort(&#123;参数：1 || -1&#125;)    --1代表升序    -1表示降序</span><br><span class="line">db.name.find(&#123;字段：/值/&#125;)        --正则查询 </span><br><span class="line"></span><br><span class="line">等于            &#123;&lt;key&gt;:&lt;value&gt;&#125;                 db.col.find(&#123;&quot;字段&quot;:&quot;&quot;&#125;).pretty()                 where by = &#x27;&#x27;</span><br><span class="line">小于            &#123;&lt;key&gt;:&#123;$lt:&lt;value&gt;&#125;&#125;         db.col.find(&#123;&quot;字段&quot;:&#123;$lt:50&#125;&#125;).pretty()            where likes &lt; 50</span><br><span class="line">小于或等于      &#123;&lt;key&gt;:&#123;$lte:&lt;value&gt;&#125;&#125;       db.col.find(&#123;&quot;字段&quot;:&#123;$lte:50&#125;&#125;).pretty()         where likes &lt;= 50</span><br><span class="line">大于            &#123;&lt;key&gt;:&#123;$gt:&lt;value&gt;&#125;&#125;         db.col.find(&#123;&quot;字段&quot;:&#123;$gt:50&#125;&#125;).pretty()            where likes &gt; 50</span><br><span class="line">大于或等于      &#123;&lt;key&gt;:&#123;$gte:&lt;value&gt;&#125;&#125;       db.col.find(&#123;&quot;字段&quot;:&#123;$gte:50&#125;&#125;).pretty()           where likes &gt;= 50</span><br><span class="line">不等于           &#123;&lt;key&gt;:&#123;$ne:&lt;value&gt;&#125;&#125;        db.col.find(&#123;&quot;字段&quot;:&#123;$ne:50&#125;&#125;).pretty()            where likes != 50</span><br><span class="line"></span><br><span class="line">db.name.find(&#123;字段：&#123;$in:[&quot;值2&quot;,&quot;值2&quot;]&#125;&#125;)      --包含内容</span><br><span class="line">db.name.find(&#123;字段：&#123;$nin:[&quot;值2&quot;,&quot;值2&quot;]&#125;&#125;)     --不包含内容</span><br><span class="line">db.name.find(&#123;$and:[&#123;字段1：值1&#125;，&#123;字段2：值2&#125;]&#125;) --条件查询and</span><br><span class="line">db.name.find(&#123;$or:[&#123;字段1：值1&#125;，&#123;字段2：值2&#125;]&#125;) --条件查询or</span><br></pre></td></tr></table></figure><h4 id="索引-Index"><a href="#索引-Index" class="headerlink" title="索引-Index"></a>索引-Index</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db.name.getIndexes()     <span class="comment">----查看索引</span></span><br><span class="line">db.name.createIndex(&#123;字段&#125;)         ----创建单索引 1升序 -1是降序</span><br><span class="line">db.name.createIndex(&#123;字段1:值，字段2：值&#125;)         ----创建复合索引 1升序 -1是降序</span><br><span class="line"></span><br><span class="line">db.name.dropindex(&#123;字段&#125;)        --删除单个索引 可以根据名称喝字段进行删除</span><br><span class="line">db.name.dropindexes()        <span class="comment">---删除所有索引 mongo自带的id索引不会被删除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="多联查询"><a href="#多联查询" class="headerlink" title="多联查询"></a>多联查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.name1.aggregate([</span><br><span class="line">&#123;</span><br><span class="line">    $lookup:&#123;</span><br><span class="line">            from: &quot;name2&quot;,</span><br><span class="line">            localField: &quot;相对应的字段&quot;,</span><br><span class="line">            foreignField: &quot;相对应的字段&quot;,</span><br><span class="line">            as: &quot;别名&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;])</span><br><span class="line">    <span class="comment">--localField：值  foreignField：值类似于  on  字段=字段</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MongoDB学习&quot;&gt;&lt;a href=&quot;#MongoDB学习&quot; class=&quot;headerlink&quot; title=&quot;MongoDB学习&quot;&gt;&lt;/a&gt;MongoDB学习&lt;/h1&gt;&lt;h4 id=&quot;Mongo常用命令&quot;&gt;&lt;a href=&quot;#Mongo常用命令&quot; class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker学习小计</title>
    <link href="http://ohao1017.github.io/2020/08/20/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%AE%A1/"/>
    <id>http://ohao1017.github.io/2020/08/20/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%AE%A1/</id>
    <published>2020-08-20T10:15:42.169Z</published>
    <updated>2020-08-20T10:20:49.802Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="docker学习小计"   >          <a href="#docker学习小计" class="heading-link"><i class="undefined"></i></a>docker学习小计</h1>              <h4 id="docker-常用命令"   >          <a href="#docker-常用命令" class="heading-link"><i class="undefined"></i></a>docker 常用命令</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version        ##查看版本</span><br><span class="line">docker --help        ##</span><br><span class="line">docker info            ##docker详细的版本信息</span><br></pre></td></tr></table></div></figure>        <h4 id="镜像命令"   >          <a href="#镜像命令" class="heading-link"><i class="undefined"></i></a>镜像命令</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker images       ##查看本机镜像 -a显示全部 -q显示id</span><br><span class="line">docker search        ##搜索镜像  --filter=stars=3000 --filter=stars=3000 下载stars&gt;=3000的</span><br><span class="line">docker pull            ##下载 ：---&gt;:指定版本号</span><br><span class="line">docker remove        ##删除镜像   rmi -f删除所有  -i是根据id删除  缩写 docker rmi -f id名</span><br></pre></td></tr></table></div></figure>        <h5 id="使用镜像命令pull时错误"   >          <a href="#使用镜像命令pull时错误" class="heading-link"><i class="undefined"></i></a>使用镜像命令pull时错误</h5>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> docker pull mysql:5.7</span><br><span class="line">Error response from daemon: Get https://registry-1.docker.io/v2/library/mysql/manifests/5.7: Get https://auth.docker.io/token?scope=repository%3Alibrary%2Fmysql%3Apull&amp;service=registry.docker.io: dial tcp: lookup auth.docker.io on 8.8.8.8:53: read udp 192.168.141.1:45130-&gt;8.8.8.8:53: i/o timeout</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#解析ip不可用</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#解决办法</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">1.先下载<span class="built_in">bind</span>-utils工具</span></span><br><span class="line">yum install bind-utils</span><br><span class="line"><span class="meta">#</span><span class="bash">2.下载成功后使用查询可用big查询可用的ip</span></span><br><span class="line">big @114.114.114.114 registry-1.docker.io</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-RedHat-9.11.4-16.P2.el7_8.6 &lt;&lt;&gt;&gt; @114.114.114.114 registry-1.docker.io</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 17089</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 8, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;registry-1.docker.io.        IN    A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">registry-1.docker.io.    32    IN    A    3.218.162.19</span><br><span class="line">registry-1.docker.io.    32    IN    A    107.23.149.57</span><br><span class="line">registry-1.docker.io.    32    IN    A    52.1.121.53</span><br><span class="line">registry-1.docker.io.    32    IN    A    3.94.35.164</span><br><span class="line">registry-1.docker.io.    32    IN    A    18.232.227.119</span><br><span class="line">registry-1.docker.io.    32    IN    A    52.4.20.24</span><br><span class="line">registry-1.docker.io.    32    IN    A    35.174.73.84</span><br><span class="line">registry-1.docker.io.    32    IN    A    23.22.155.84</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">3.选择当中可用ip去/etc/hosts目录下去修改docker.io的域名解析到其它可用IP</span></span><br><span class="line">cd ..</span><br><span class="line">cd ..</span><br><span class="line">vi /etc/host</span><br><span class="line"><span class="meta">#</span><span class="bash">4.将可用ip保存到host文件中并且退出</span></span><br><span class="line">107.23.149.57  registry-1.docker.io</span><br><span class="line"><span class="meta">#</span><span class="bash">5.重启docker后重新下载即可</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h5 id="docker-pull-慢"   >          <a href="#docker-pull-慢" class="heading-link"><i class="undefined"></i></a>docker pull 慢</h5>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入docker在本机的配置目录：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">命令：<span class="built_in">cd</span> /etc/docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash">找到daemon.json文件，如果没有就新建一个 写入内容：</span></span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;:[&quot;https://almtd3fa.mirror.aliyuncs.com&quot;]      </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">最后重启docker服务</span></span><br><span class="line">service docker restart</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h4 id="容器命令"   >          <a href="#容器命令" class="heading-link"><i class="undefined"></i></a>容器命令</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#启动docker镜像</span></span></span><br><span class="line">docker run [可选参数]  imag    </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># --name=&quot;&quot;容器名字 -d后台方式运行 -it 交互方式运行：进入容器查看内容  -p主机端口：容器端口</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#退出容器 exit</span></span></span><br><span class="line">docker ps          #查看正在运行中的容器   </span><br><span class="line">docker ps -a    #查看正在运行中的容器 +停止过的容器</span><br><span class="line">docker ps -n=?     #查看最近创建的容器</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#退出停止docker镜像</span></span></span><br><span class="line">exit             ##直接退出容器并且停止</span><br><span class="line">Ctrl + P + Q    ##不停止退出容器</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#删除容器</span></span></span><br><span class="line">docker rm 容器id    ##删除容器  不能删除正在运行的容器   docker rmi 容器id 是删除镜像</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#启动和停止容器</span></span></span><br><span class="line">docker start 容器id</span><br><span class="line">docker restart 容器id</span><br><span class="line">docker stop 容器id</span><br><span class="line">docker kill 容器id</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#进入正在运行的容器</span></span></span><br><span class="line">docker exec -it 容器id /bin/bash## -d后台方式运行 -it 交互方式运行：进入容器查看内容  -p主机端口：容器端口</span><br><span class="line">docker attach 容器id         ##进入当前容器正在运行的命令行</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#查看日志</span></span></span><br><span class="line">docker logs 容器id        ## -ft显示所有日志信息 --tail 动态查看日志</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#查看容器内部的进程信息</span></span></span><br><span class="line">docker top 容器id</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#查看镜像源数据</span></span></span><br><span class="line">docker inspect </span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h5 id="从容器内拷贝文件到主机上"   >          <a href="#从容器内拷贝文件到主机上" class="heading-link"><i class="undefined"></i></a>从容器内拷贝文件到主机上</h5>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器id:/路径 /粘贴路径 </span><br></pre></td></tr></table></div></figure>        <h5 id="Commit-创建新的镜像"   >          <a href="#Commit-创建新的镜像" class="heading-link"><i class="undefined"></i></a>Commit 创建新的镜像</h5>        <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -a=&#x27;&#x27; -m=&#x27;&#x27;  容器id 容器名称:版本号  ##-a作者 -m 备注</span><br></pre></td></tr></table></div></figure>        <h4 id="容器数据卷"   >          <a href="#容器数据卷" class="heading-link"><i class="undefined"></i></a>容器数据卷</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v \主机地址项目：容器目录 -e    #容器数据卷挂载 vue双向绑定类似 -e配置文件  匿名挂载</span><br><span class="line">docker run -it -v 名称:\主机地址项目：#具名挂载</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####:ro--&gt;只读 只能通过宿主机操作容器不可操作   :rw--&gt;可读可写</span></span></span><br></pre></td></tr></table></div></figure>        <h5 id="dockerfile脚本生成镜像"   >          <a href="#dockerfile脚本生成镜像" class="heading-link"><i class="undefined"></i></a>dockerfile脚本生成镜像</h5>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建编写DockFile脚本 </span></span><br><span class="line">FROM centos</span><br><span class="line">VOLUME [&quot;volume01&quot;,&quot;volume02&quot;]</span><br><span class="line">CMD echo &quot;----end----&quot;</span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash">运行编写好的DockFile文件</span></span><br><span class="line">docker build -f DockFile -t luohao/centos .</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######--volumes-from 继承名称 数据共享+持久化本地（备份） </span></span></span><br></pre></td></tr></table></div></figure><h6 id=""><a href="#" class="headerlink" title=""></a></h6>        <h4 id="DockFile-学习"   >          <a href="#DockFile-学习" class="heading-link"><i class="undefined"></i></a>DockFile 学习</h4>              <h6 id="文件构建步骤"   >          <a href="#文件构建步骤" class="heading-link"><i class="undefined"></i></a>文件构建步骤</h6>      <p>​            1.创建并且编写一个dockerfile文件</p><p>​            2.docker build构建成一个镜像</p><p>​            3.docker run 运行镜像</p><p>​            4.docker push 发布镜像（DockerHub）</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">指令                            <span class="comment">#说明</span></span></span><br><span class="line">FROM                         #设置镜像使用的基础镜像</span><br><span class="line">MAINTAINER                     #设置镜像的作者</span><br><span class="line">RUN                             #编译镜像时运行的脚本</span><br><span class="line">CMD                             #设置容器的启动命令</span><br><span class="line">LABEL                         #设置镜像的标签</span><br><span class="line">EXPOESE                         #设置镜像暴露的端口</span><br><span class="line">ENV                             #设置容器的环境变量</span><br><span class="line">ADD                             #编译镜像时复制文件到镜像中 如果是压缩包就会解压</span><br><span class="line">COPY                         #编译镜像时复制文件到镜像中</span><br><span class="line">ENTRYPOINT                     #设置容器的入口程序</span><br><span class="line">VOLUME                         #设置容器的挂载卷</span><br><span class="line">USER                         #设置运行RUN CMD ENTRYPOINT的用户名</span><br><span class="line">WORKDIR                         #设置RUN CMD ENTRYPOINT COPY ADD指令的工作目录</span><br><span class="line">ARG                             #设置编译镜像时加入的参数</span><br><span class="line">ONBUILD                         #设置镜像的ONBUILD指令</span><br><span class="line">STOPSIGNAL                     #设置容器的退出信号量dn</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看镜像是如何构建的</span></span><br><span class="line">docker history</span><br><span class="line"><span class="meta">#</span><span class="bash">CMD和ENTRYPOINT的区别 CMD不能拼接命令 ENTRYPOINT可以追加命令</span></span><br></pre></td></tr></table></div></figure>        <h4 id="自定义网络"   >          <a href="#自定义网络" class="heading-link"><i class="undefined"></i></a>自定义网络</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker network ls        #查看所有网络</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">自定义一个网络!</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --driver bridge    桥接</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --subnet 192.168.0.0/16| 子网地址</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --gateway 192.168.0.1  网关</span></span><br><span class="line">docker network create --driver bridge --subnet 192.168.0.0/16 --gateway 192.168.0.1 mynet</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动容器时指定网络  --net 网络名称</span></span><br><span class="line">docker run -d -p 8080:8080 --name tomcat01 --net 网络名称 tomcat</span><br><span class="line"><span class="meta">#</span><span class="bash">这样启动的好处可以直接通过容器名来ping通网络</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#网络连通  网络打通容器</span></span></span><br><span class="line">docker network connect 网络名 容器名</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h1 id=&quot;docker学习小计&quot;   &gt;
          &lt;a href=&quot;#docker学习小计&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;undefined&quot;&gt;&lt;/i&gt;&lt;/a&gt;docker学习小计&lt;/h1&gt;
      
  </summary>
      
    
    
    
    
  </entry>
  
</feed>
